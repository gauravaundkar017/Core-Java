package tester;
import static utils.StudentCollectionUtils.*;

import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.app.core.Student;

public class Test1 {

	@SuppressWarnings("unlikely-arg-type")
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		List<Student> list = populateList();
		//1.1 Display all student details from a student list
		list.forEach(l -> System.out.println(l));
		
		//1.2  Display all student details from a student map
		System.out.println("Student list using map");
		Map<String,Student> mapList = populateMap(list);
		mapList.forEach((String,Student) -> System.out.println("RollNo-"+ Student.getRollNo() +" GPA-"+ Student.getGpa()));
		mapList.forEach((String,Student) -> System.out.println(Student));
		
//		1.3 Display all student details(from the list) sorted as per GPA (desc order)
//		Use custom ordering
		Collections.sort(list, (s1,s2) -> {
			System.out.println("In Lambda");
			if (s1.getGpa()<s2.getGpa()) 
				return 1;
			if (s1.getGpa()>s2.getGpa()) 
				return -1;
			return 0;
		});
		list.forEach(l -> System.out.println(l));
		
		//rewrite using fuction literal
		Comparator<Student> studentComp = (s1,s2) -> {
			System.out.println("In Lambda");
			if (s1.getGpa()<s2.getGpa()) 
				return 1;
			if (s1.getGpa()>s2.getGpa()) 
				return -1;
			return 0;
		};
		Collections.sort(list,studentComp);
		list.forEach(l -> System.out.println(l));
		
		//using compareTo
		//type casting explicitly by program and  
		Comparator<Student> stud = (s1,s2) -> ((Double)s1.getGpa()).compareTo(s2.getGpa());
		Collections.sort(list,stud);

		Comparator<Student> stud1 = (s1,s2) -> (s1.getAddress().getPhoneNo()).compareTo(s2.getAddress().getPhoneNo());
		Collections.sort(list,stud1);

		
		
		
		
		
		
		
		
		System.out.println();
		//1.4 Remove all failed students from the map n display the map again (gpa < 6 => failure)
		
		mapList.forEach((String,Student) -> {
			if (Student.getGpa() < 6) {
				System.out.println(Student);
			}

		});
//		mapList.forEach((String,Student) -> System.out.println(Student));

		
	}

}
